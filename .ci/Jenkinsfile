#!/usr/bin/env groovy
library 'kibana-pipeline-library'
kibanaLibrary.load() // load from the Jenkins instance

pipeline {
    agent { label 'docker && tests-xl-highmem' }
    stages {
        stage ('Initialize') {
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }

        stage ('Build') {
            steps {
              withVaultSecret(secret: 'secret/kibana-issues/dev/cloud-staging-api-key', secret_field: 'cloud_staging_api_key', variable_name: 'API_KEY')  {
                sh '''
                    export API_KEY=${API_KEY}
                    export deployConfig=config/deploy/7.9.3.conf
                    mvn clean -Dmaven.test.failure.ignore=true compile
                    mvn gatling:test -Dgatling.simulationClass=org.kibanaLoadTest.simulation.DemoJourney
                '''
              }

            }
            post {
                success {
                  withVaultSecret(secret: 'secret/kibana-issues/prod/coverage/elasticsearch', secret_field: 'host', variable_name: 'HOST_FROM_VAULT') {
                    withVaultSecret(secret: 'secret/kibana-issues/prod/coverage/elasticsearch', secret_field: 'username', variable_name: 'USER_FROM_VAULT') {
                      withVaultSecret(secret: 'secret/kibana-issues/prod/coverage/elasticsearch', secret_field: 'password', variable_name: 'PASS_FROM_VAULT') {
                        sh '''
                          mvn exec:java -Dexec.mainClass=org.kibanaLoadTest.ingest.Main -Dexec.classpathScope=test -Dexec.cleanupDaemonThreads=false
                        '''
                      }
                    }
                  }
                }
            }
        }
    }
}
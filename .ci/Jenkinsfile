#!/usr/bin/env groovy
library 'kibana-pipeline-library'

pipeline {
    agent { label 'docker && tests-xl-highmem' }
    stages {
        stage ('Initialize') {
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }

        stage ('Build') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'master']],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'kibana']],
                    submoduleCfg: [],
                    userRemoteConfigs: [[
                        credentialsId: 'f6c7695a-671e-4f4f-a331-acdce44ff9ba',
                        url: 'git@github.com:elastic/kibana',
                    ]],
                ])
                sh """
                    cd kibana
                    echo "running setup.sh"
                    /usr/local/bin/runbld -d '${pwd()}' --config ${env.WORKSPACE}/kibana/.ci/runbld_no_junit.yml ./src/dev/ci_setup/setup.sh
                    echo "running checkout_sibling_es.sh"
                    /usr/local/bin/runbld -d '${pwd()}' --config ${env.WORKSPACE}/kibana/.ci/runbld_no_junit.yml ./src/dev/ci_setup/checkout_sibling_es.sh
                    echo "running jenkins_xpack_build_kibana.sh"
                    ./test/scripts/jenkins_xpack_build_kibana.sh
                """
                withVaultSecret(secret: 'secret/kibana-issues/dev/cloud-staging-api-key', secret_field: 'value', variable_name: 'API_KEY')  {
                    sh """
                        ls -la
                        cd kibana-load-testing
                        export cloudDeploy=${params.STACK_VERSION}
                        mvn clean -q -Dmaven.test.failure.ignore=true compile
                        mvn gatling:test -q -Dgatling.simulationClass=org.kibanaLoadTest.simulation.DemoJourney
                    """
                }
            }
            post {
                success {
                  withVaultSecret(secret: 'secret/kibana-issues/prod/coverage/elasticsearch', secret_field: 'host', variable_name: 'HOST_FROM_VAULT') {
                    withVaultSecret(secret: 'secret/kibana-issues/prod/coverage/elasticsearch', secret_field: 'username', variable_name: 'USER_FROM_VAULT') {
                      withVaultSecret(secret: 'secret/kibana-issues/prod/coverage/elasticsearch', secret_field: 'password', variable_name: 'PASS_FROM_VAULT') {
                        sh '''
                          cd kibana-load-testing
                          mvn exec:java -Dexec.mainClass=org.kibanaLoadTest.ingest.Main -Dexec.classpathScope=test -Dexec.cleanupDaemonThreads=false
                        '''
                      }
                    }
                  }
                }
            }
        }
    }
}